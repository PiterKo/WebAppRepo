@using Repo.Models
@using Repo.Extensions
@using Repo.HtmlHelpers
@using Microsoft.AspNet.Identity
@model Repo.Models.AdModel

@{
    ViewBag.Title = "Ogłoszenie";
}

<h2>Witaj @User.Identity.GetFirstName()!</h2>

<hr />

@using (Html.BeginForm("Index", "AdModels", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Teraz stwórz swoje ogoszenie.</h4>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.AdType.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownListFor(m => m.AdType.Id, new SelectList(Model.Types, "Id", "Name"), new { @class = "form-control" })*@
            <select class="form-control" name="AdType.Id">
                @foreach(var item in Model.Types)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.AdType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AdCategories, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Helper.CheckBoxList(new SelectList(Model.AdCategories, "Id", "Name"), "SelectedCategories")
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Image" />
            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Skills, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Zapisz" class="btn btn-success btn-lg" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
